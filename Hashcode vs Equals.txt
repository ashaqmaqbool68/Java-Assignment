1-->Java equals is used to compare two objects.It compares values of both the object attributes whether they are same or not.Two objects will be same if they are present at the same location.
Hashcode is a value  associated with the object.Hashcode()method returns the hash value of objects.Hashcode method returns same hash value when called on two objects which are equal according 
to equals method but return different hash values when called on different objects.

2-->The hashCode() method of HashSet in Java is used to get the hashCode value for this instance of the HashSet.
 It returns an integer value which is the hashCode value for this instance of the HashSet.

3-->If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result.
It is not required that if two objects are unequal according to the equals method, then calling the hashCode method on each of the two objects must produce distinct integer results.
It is necessary to override the hashCode() method of Object class if we are overriding the equals() method.

4-->We can remove the duplicate id's of employees in java using Hashset.
class HashSet2{  
 public static void main(String args[]){  
  
  HashSet<String> set=new HashSet<String>();  
  set.add("Ravi");  
  set.add("Vijay");  
  set.add("Ravi");  
  set.add("Ajay"); 
System.out.println(set);
}
}
Showing Equals & HashCode method:-
package basics;

import java.util.HashSet;
import java.util.Set;

public class EqualTest {
    
    	  public static void main(String[] args) {
    	        Employee e1 = new Employee();
    	        Employee e2 = new Employee();
    	 
    	        e1.setId(100);
    	        e2.setId(100);
    	 
    	        System.out.println(e1.equals(e2));
    	        Set<Employee> employees = new HashSet<Employee>();
    	        employees.add(e1);
    	        employees.add(e2);
    	        System.out.println(employees);
    }}
